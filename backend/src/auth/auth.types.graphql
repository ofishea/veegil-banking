type User {
  _id: ID!
  fullName: String!
  email: String!
  phoneNumber: String!
  accountNumber: String!
  accountBalance: String!
  password: String!
}

input CreateUserInput {
  fullName: String!
  email: String!
  phoneNumber: String!
  accountNumber: String!
  accountBalance: String!
  password: String!
}

input UpdateUserInput {
  fullName: String
  email: String
  phoneNumber: String
  accountNumber: String
  accountBalance: Float
  password: String
}

input AuthInput {
  email: String!
  password: String!
}

type AuthLogin {
  email: String!
  password: String!
}

type Query {
  getUserById(userId: ID!): User
}

type Mutation {
  register(input: CreateUserInput!): User
  login(input: AuthInput!): AuthLogin
  updateUser(userId: ID!, input: UpdateUserInput!): User
  deleteUser(userId: ID!): User
  protectedResource: String
}
